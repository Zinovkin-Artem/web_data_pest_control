# import ftplib
# import streamlit as st
# from io import BytesIO

# def show_page_4():

 


#     # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã FTP-—Å–µ—Ä–≤–µ—Ä–∞
#     ftp_host = '195.138.73.12'
#     ftp_port = 21
#     ftp_username = 'ln'
#     ftp_password = 'lala280508'
#     folders = ["/o", "/–ü–∞—Ü–∞–Ω–∞–º –Ω–µ—â–µ–≥–æ –¥–µ–ª–∞—Ç—å", "/—Ñ–æ—Ç–∫–∏", "/–§–æ—Ç–∫–∏ –º–æ–∏!", "/–ø–µ—Ä–µ–¥ —ç–∫–∑–∞–º–µ–Ω–æ–º", "/Images", "/–û—Ö–æ—Ä–æ–Ω–∞ –ü—Ä–∞—Ü—ñ/jpg"]  # –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫

#     # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ FTP
#     def connect_ftp():
#         ftp = ftplib.FTP()
#         ftp.connect(ftp_host, ftp_port)
#         ftp.login(ftp_username, ftp_password)
#         ftp.set_pasv(False)
#         return ftp

#     # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
#     def read_file(ftp, filename):
#         file_data = BytesIO()
#         ftp.retrbinary(f'RETR {filename}', file_data.write)
#         file_data.seek(0)
#         return file_data

#     # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
#     image_extensions = (".jpg", ".jpeg", ".png", ".gif", ".bmp", ".webp")

#     # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ FTP
#     ftp = connect_ftp()

#     # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ç–æ
#     if "opened_folders" not in st.session_state:
#         st.session_state["opened_folders"] = {}
#     if "show_images" not in st.session_state:
#         st.session_state["show_images"] = {}

#     # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–∞–ø–∫–∏ –≤ —á–µ—Ç—ã—Ä–µ –∫–æ–ª–æ–Ω–∫–∏ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
#     cols = st.columns(4)
#     for idx, folder in enumerate(folders):
#         with cols[idx % 4]:
#             if st.button(f"üìÇ {folder}", key=f"folder_{folder}", help="–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É"):
#                 st.session_state["opened_folders"][folder] = not st.session_state["opened_folders"].get(folder, False)
#                 # –ü—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø–∞–ø–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –Ω–µ–µ
#                 if not st.session_state["opened_folders"][folder]:
#                     st.session_state["show_images"][folder] = {}

#     # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–æ–∫ –ø–æ–¥ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø–∞–ø–∫–∞–º–∏
#     for idx, folder in enumerate(folders):
#         if st.session_state["opened_folders"].get(folder, False):
#             with cols[idx % 4]:
#                 st.subheader(f"üìÅ {folder}")
#                 ftp.cwd(folder)
#                 files = ftp.nlst()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
#                 image_files = [file for file in files if file.lower().endswith(image_extensions)]  # –§–∏–ª—å—Ç—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

#                 if not image_files:
#                     st.write("–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ.")
#                 else:
#                     for img_file in image_files:
#                         if st.button(f"üì∑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å {img_file}", key=f"view_{folder}_{img_file}"):
#                             if folder not in st.session_state["show_images"]:
#                                 st.session_state["show_images"][folder] = {}
#                             st.session_state["show_images"][folder][img_file] = not st.session_state["show_images"][folder].get(img_file, False)

#                         if st.session_state["show_images"].get(folder, {}).get(img_file, False):
#                             img_data = read_file(ftp, img_file)
#                             st.image(img_data, caption=img_file, use_container_width=True)

#                             # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
#                             st.download_button(
#                                 label=f"üì• –°–∫–∞—á–∞—Ç—å {img_file}",
#                                 data=img_data,
#                                 file_name=img_file,
#                                 mime="image/jpeg",
#                                 key=f"download_{folder}_{img_file}"
#                             )

#     ftp.quit()





import ftplib
import streamlit as st
from io import BytesIO

def show_page_4():
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã FTP-—Å–µ—Ä–≤–µ—Ä–∞
    ftp_host = '195.138.73.12'
    ftp_port = 21
    ftp_username = 'ln'
    ftp_password = 'lala280508'
    root_folders = ["/o", "/–ü–∞—Ü–∞–Ω–∞–º –Ω–µ—â–µ–≥–æ –¥–µ–ª–∞—Ç—å", "/—Ñ–æ—Ç–∫–∏", "/–§–æ—Ç–∫–∏ –º–æ–∏!", "/–ø–µ—Ä–µ–¥ —ç–∫–∑–∞–º–µ–Ω–æ–º", "/Images", "/–¥–æ–∫—É–º–µ–Ω—Ç–∏"]

    def connect_ftp():
        ftp = ftplib.FTP()
        ftp.connect(ftp_host, ftp_port)
        ftp.login(ftp_username, ftp_password)
        ftp.set_pasv(False)
        return ftp

    def read_file(ftp, filename):
        file_data = BytesIO()
        ftp.retrbinary(f'RETR {filename}', file_data.write)
        file_data.seek(0)
        return file_data

    pdf_extension = ".pdf"

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–∞–ø–∫–∏ –∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
    def process_folder(ftp, folder):
        ftp.cwd(folder)
        items = ftp.nlst()  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏ –ø–∞–ø–æ–∫
        pdf_files = []  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è PDF —Ñ–∞–π–ª–æ–≤
        subfolders = []  # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫

        for item in items:
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –≤ –ø–∞–ø–∫—É
                ftp.cwd(item)  # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–π—Ç–∏ –≤ –ø–∞–ø–∫—É
                subfolders.append(item)  # –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –æ—Ç–∫—Ä—ã–ª–∞—Å—å, –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
                ftp.cwd("..")  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            except ftplib.error_perm:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–∫ –ø–∞–ø–∫—É, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ —Ñ–∞–π–ª, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
                if item.lower().endswith(pdf_extension):
                    pdf_files.append(item)
        
        return pdf_files, subfolders

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
    ftp = connect_ftp()

    if "opened_folders" not in st.session_state:
        st.session_state["opened_folders"] = {}

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ—Ä–Ω–µ–≤—ã–µ –ø–∞–ø–∫–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è
    cols = st.columns(4)
    for idx, folder in enumerate(root_folders):
        with cols[idx % 4]:
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏
            folder_key = f"folder_{folder}"
            if st.button(f"üìÇ {folder}", key=folder_key):
                st.session_state["opened_folders"][folder] = not st.session_state["opened_folders"].get(folder, False)

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–∞–π–ª—ã –≤–Ω—É—Ç—Ä–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–∞–ø–æ–∫
    for idx, folder in enumerate(root_folders):
        if st.session_state["opened_folders"].get(folder, False):
            with cols[idx % 4]:
                # st.subheader(f"üìÅ {folder}")
                pdf_files, subfolders = process_folder(ftp, folder)

                # –ï—Å–ª–∏ –≤ –ø–∞–ø–∫–µ –µ—Å—Ç—å PDF —Ñ–∞–π–ª—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö
                if pdf_files:
                    for pdf_file in pdf_files:
                        pdf_data = read_file(ftp, pdf_file)
                        st.download_button(
                            label=pdf_file,
                            data=pdf_data,
                            file_name=pdf_file,
                            mime="application/pdf",
                            key=f"download_{folder}_{pdf_file}"
                        )

                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è
                for subfolder in subfolders:
                    subfolder_key = f"subfolder_{folder}_{subfolder}"
                    if st.button(f"üìÇ {subfolder}", key=subfolder_key):
                        # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫—Ä—ã—Ç—å –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
                        subfolder_opened = st.session_state.get(f"opened_subfolder_{subfolder}", False)
                        st.session_state[f"opened_subfolder_{subfolder}"] = not subfolder_opened
                        if subfolder_opened:
                            st.write("–°–≤–µ—Ä–Ω—É—Ç—å")

                    if st.session_state.get(f"opened_subfolder_{subfolder}", False):
                        subfolder_pdf_files, subfolder_subfolders = process_folder(ftp, f"{folder}/{subfolder}")

                        if subfolder_pdf_files:  # –ï—Å–ª–∏ –≤–ª–æ–∂–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç PDF —Ñ–∞–π–ª—ã
                            # st.subheader(f"üìÅ –í–ª–æ–∂–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: {subfolder}")
                            for pdf_file in subfolder_pdf_files:
                                pdf_data = read_file(ftp, f"{folder}/{subfolder}/{pdf_file}")
                                st.download_button(
                                    label=pdf_file,
                                    data=pdf_data,
                                    file_name=pdf_file,
                                    mime="application/pdf",
                                    key=f"download_{folder}_{subfolder}_{pdf_file}"
                                )

                if not pdf_files and not subfolders:
                    st.write("–ù–µ—Ç PDF –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ –∏–ª–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö.")

    ftp.quit()




