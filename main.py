import streamlit as st




st.markdown(
    """
    <style>
    .main {
        max-width: 85%;
        padding-left: 1rem;
        padding-right: 1rem;
    }
    </style>
    """,
    unsafe_allow_html=True
)


import sql  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∞—à –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
from page_0 import show_page_0
from page_1 import show_page_1
from page_2 import show_page_2
from page_3 import show_page_3
from page_4 import show_page_4
from page_5 import show_page_5

# –ò—Å–ø–æ–ª—å–∑—É–µ–º session_state –≤–º–µ—Å—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
if "predpr" not in st.session_state:
    st.session_state["predpr"] = []  # –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–æ–ª—è
def check_password():
    """Returns `True` if the user had a correct password."""

    def login_form():
        """Form to collect username & password"""
        with st.form("Credentials"):
            st.text_input("Username", key="username")
            st.text_input("Password", type="password", key="password")
            submit_button = st.form_submit_button("Log in", on_click=password_entered)

    def password_entered():
        """Checks whether a password entered by the user is correct."""
        username = st.session_state["username"]
        password = st.session_state["password"]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
        user_data = sql.show_login(username)  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –ø–æ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_data and user_data[0].lower() == username.lower() and user_data[1] == password:
            st.session_state["password_correct"] = True

            predpr_session_state = user_data[2]
          
            if st.session_state["username"].lower() == "admin":
               
                predpr_session_state = sql.show_login_admin()
            


            del st.session_state["password"]
            del st.session_state["username"]


            
           
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ –≤ session_state
            st.session_state["predpr"].append(predpr_session_state)
            
        else:
            st.session_state["password_correct"] = False

    if st.session_state.get("password_correct", False):
        return True

    login_form()
    if "password_correct" in st.session_state and not st.session_state["password_correct"]:
        st.error("üòï User not known or password incorrect")
    return False

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è
if not check_password():
    st.stop()


# –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º session_state –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è predpr
if st.session_state["predpr"]:
    _predp = st.session_state["predpr"]

    if "," in _predp[0]:
        _predp = _predp[0].split(",")
    


    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ session_state
    if "selected_predp" not in st.session_state:
        st.session_state["selected_predp"] = _predp[0]  # –ë–µ—Ä—ë–º –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ

    if len(_predp) > 1:
        selected_predp = st.sidebar.radio(
            "–û–±–µ—Ä—ñ—Ç—å –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–æ:", _predp, key="selected_predp"
        )
    else:
        selected_predp = _predp[0]  # –ï—Å–ª–∏ –æ–¥–Ω–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–µ, –≤—ã–±–∏—Ä–∞–µ–º –µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
   
    # –ï—Å–ª–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–π –Ω–µ—Å–∫–æ–ª—å–∫–æ, –≤—ã–±–∏—Ä–∞–µ–º —Ä–∞–∑–¥–µ–ª –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è
    selected_page = st.sidebar.radio(
        f"–í–∏–±–µ—Ä—ñ—Ç—å —Ä–æ–∑–¥—ñ–ª –¥–ª—è {selected_predp}",
        ["–ó–∞–≥–∞–ª—å–Ω—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ","–ü–µ—Ä—à–∏–π –±–∞—Ä'—î—Ä", "–î—Ä—É–≥–∏–π –±–∞—Ä'—î—Ä", "–¢—Ä–µ—Ç—ñ–π –±–∞—Ä'—î—Ä", "–î–æ–∫—É–º–µ–Ω—Ç–∏", "test"],
        key="selected_page"
)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü
    if selected_page == "–ó–∞–≥–∞–ª—å–Ω—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ":
        show_page_0(selected_predp, "IIII",  "–ó–∞–≥–∞–ª—å–Ω—ñ –≤—ñ–¥–æ–º–æ—Å—Ç—ñ")
    elif selected_page == "–ü–µ—Ä—à–∏–π –±–∞—Ä'—î—Ä":
        show_page_1(selected_predp, "I", "–ü–µ—Ä—à–∏–π –±–∞—Ä'—î—Ä")
    elif selected_page == "–î—Ä—É–≥–∏–π –±–∞—Ä'—î—Ä":
        show_page_2(selected_predp, "II", "–î—Ä—É–≥–∏–π –±–∞—Ä'—î—Ä")
    elif selected_page == "–¢—Ä–µ—Ç—ñ–π –±–∞—Ä'—î—Ä":
        show_page_3(selected_predp, "III", "–¢—Ä–µ—Ç—ñ–π –±–∞—Ä'—î—Ä")
    elif selected_page == "–î–æ–∫—É–º–µ–Ω—Ç–∏":
        show_page_4(selected_predp)
    elif selected_page == "test":
        show_page_5(selected_predp, "III")
